"""0004_mhr_staff_review

Revision ID: c347f1fa6229
Revises: 4ee06cbac24b
Create Date: 2025-09-08 10:04:47.985333

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence  # Added manually.

# revision identifiers, used by Alembic.
revision = 'c347f1fa6229'
down_revision = '4ee06cbac24b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
 
    # ### Manually create sequences and add them to pk columns. ###
    op.execute(CreateSequence(Sequence('mhr_review_registration_id_seq', start=1, increment=1)))
    op.execute(CreateSequence(Sequence('mhr_review_step_id_seq', start=1, increment=1)))
 
    mhr_review_status_type = op.create_table('mhr_review_status_types',
    sa.Column('status_type', postgresql.ENUM('PAY_PENDING', 'PAY_CANCELLED', 'NEW', 'IN_REVIEW', 'ON_HOLD', 'APPROVED', 'DECLINED', name='mhr_review_status_type'), nullable=False),
    sa.Column('status_type_desc', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('status_type')
    )
    op.create_table('mhr_review_registrations',
    sa.Column('id', sa.Integer(), sa.Sequence('mhr_review_registration_id_seq'), nullable=False),
    sa.Column('create_ts', sa.DateTime(), nullable=False),
    sa.Column('registration_data', sa.JSON(), nullable=False),
    sa.Column('mhr_number', sa.String(length=7), nullable=False),
    sa.Column('draft_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.String(length=20), nullable=True),
    sa.Column('submitting_name', sa.String(length=320), nullable=True),
    sa.Column('assignee_name', sa.String(length=320), nullable=True),
    sa.Column('client_reference_id', sa.String(length=50), nullable=True),
    sa.Column('pay_invoice_id', sa.Integer(), nullable=True),
    sa.Column('pay_path', sa.String(length=256), nullable=True),
    sa.Column('user_id', sa.String(length=1000), nullable=True),
    sa.Column('document_id', sa.String(length=20), nullable=True),
    sa.Column('priority', sa.Boolean(), nullable=False),
    sa.Column('registration_type', postgresql.ENUM('DECAL_REPLACE', 'MHREG', 'TRAND', 'TRANS', 'TRANS_AFFIDAVIT', 'TRANS_ADMIN', 'TRANS_WILL', 'EXEMPTION_RES', 'EXEMPTION_NON_RES', 'PERMIT', 'PERMIT_EXTENSION', 'MANUFACTURER', 'MHREG_CONVERSION', 'REG_STAFF_ADMIN', 'AMENDMENT', name='mhr_registration_type', create_type=False), nullable=False),
    sa.Column('document_type', postgresql.ENUM('REG_101', 'REG_102', 'REG_103', 'REG_103E', 'ABAN', 'ADDI', 'AFFE', 'ATTA', 'BANK', 'BCLC', 'CAU', 'CAUC', 'CAUE', 'COMP', 'CONF', 'CONV', 'COU', 'COUR', 'DEAT', 'DNCH', 'EXMN', 'EXNR', 'EXRE', 'EXRS', 'FORE', 'FZE', 'GENT', 'INTE', 'INTW', 'LETA', 'MAID', 'MAIL', 'MARR', 'MEAM', 'NAMV', 'NCAN', 'NCON', 'NPUB', 'NRED', 'PDEC', 'PUBA', 'REBU', 'REGC', 'REIV', 'REPV', 'REST', 'STAT', 'SZL', 'TAXN', 'TAXS', 'THAW', 'TRAN', 'VEST', 'WHAL', 'WILL', 'TRANS_LAND_TITLE', 'TRANS_FAMILY_ACT', 'TRANS_INFORMAL_SALE', 'TRANS_QUIT_CLAIM', 'TRANS_SEVER_GRANT', 'TRANS_RECEIVERSHIP', 'TRANS_WRIT_SEIZURE', 'AMEND_PERMIT', 'CANCEL_PERMIT', 'REGC_STAFF', 'REGC_CLIENT', 'REREGISTER_C', name='mhr_document_type', create_type=False), nullable=False),
    sa.Column('status_type', postgresql.ENUM('PAY_PENDING', 'PAY_CANCELLED', 'NEW', 'IN_REVIEW', 'ON_HOLD', 'APPROVED', 'DECLINED', name='mhr_review_status_type'), nullable=False),
    sa.ForeignKeyConstraint(['document_type'], ['mhr_document_types.document_type'], ),
    sa.ForeignKeyConstraint(['registration_type'], ['mhr_registration_types.registration_type'], ),
    sa.ForeignKeyConstraint(['status_type'], ['mhr_review_status_types.status_type'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('mhr_review_registrations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_assignee_name'), ['assignee_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_create_ts'), ['create_ts'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_document_type'), ['document_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_mhr_number'), ['mhr_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_priority'), ['priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_registration_type'), ['registration_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_status_type'), ['status_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_registrations_submitting_name'), ['submitting_name'], unique=False)

    op.create_table('mhr_review_steps',
    sa.Column('id', sa.Integer(), sa.Sequence('mhr_review_step_id_seq'), nullable=False),
    sa.Column('create_ts', sa.DateTime(), nullable=False),
    sa.Column('staff_note', sa.String(length=4000), nullable=True),
    sa.Column('client_note', sa.String(length=4000), nullable=True),
    sa.Column('change_note', sa.String(length=1000), nullable=True),
    sa.Column('username', sa.String(length=1000), nullable=True),
    sa.Column('review_registration_id', sa.Integer(), nullable=False),
    sa.Column('status_type', postgresql.ENUM('PAY_PENDING', 'PAY_CANCELLED', 'NEW', 'IN_REVIEW', 'ON_HOLD', 'APPROVED', 'DECLINED', name='mhr_review_status_type'), nullable=False),
    sa.ForeignKeyConstraint(['review_registration_id'], ['mhr_review_registrations.id'], ),
    sa.ForeignKeyConstraint(['status_type'], ['mhr_review_status_types.status_type'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('mhr_review_steps', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_mhr_review_steps_create_ts'), ['create_ts'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_steps_review_registration_id'), ['review_registration_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mhr_review_steps_status_type'), ['status_type'], unique=False)

    # ### Manually add type table data ###
    op.bulk_insert(mhr_review_status_type,
      [
        { 'status_type': 'PAY_PENDING', 'status_type_desc': 'Client credit card payment pending - incomplete.' },
        { 'status_type': 'PAY_CANCELLED', 'status_type_desc': 'Client credit card payment cancelled/expired.' },
        { 'status_type': 'NEW', 'status_type_desc': 'New registration for staff review.' },
        { 'status_type': 'IN_REVIEW', 'status_type_desc': 'Registration in review by staff.' },
        { 'status_type': 'ON_HOLD', 'status_type_desc': 'Registration on hold by staff waiting for client information.' },
        { 'status_type': 'APPROVED', 'status_type_desc': 'Registration approved by staff.' },
        { 'status_type': 'DECLINED', 'status_type_desc': 'Registration rejected/declined by staff.' }
      ]
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table('mhr_review_steps', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mhr_review_steps_status_type'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_steps_review_registration_id'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_steps_create_ts'))

    op.drop_table('mhr_review_steps')
    with op.batch_alter_table('mhr_review_registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_submitting_name'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_status_type'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_registration_type'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_priority'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_mhr_number'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_document_type'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_create_ts'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_assignee_name'))
        batch_op.drop_index(batch_op.f('ix_mhr_review_registrations_account_id'))

    op.drop_table('mhr_review_registrations')
    op.drop_table('mhr_review_status_types')

    # Manually added drop sequence commands ###
    op.execute(DropSequence(Sequence('mhr_review_step_id_seq')))
    op.execute(DropSequence(Sequence('mhr_review_registration_id_seq')))
    # ### end Alembic commands ###
